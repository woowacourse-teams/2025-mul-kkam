name: backend-prod-cd

on:
  push:
    branches:
      - 'v*.*.*'

jobs:
  build-and-push:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.ver.outputs.version }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Derive version from branch
        id: ver
        shell: bash
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          if [[ ! "$BRANCH" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Unsupported branch: $BRANCH"; exit 1
          fi
          VERSION="$BRANCH"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Resolved VERSION=$VERSION"

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew
        working-directory: ./backend

      - name: Build project
        run: ./gradlew clean build -x test
        working-directory: ./backend

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Multi-Arch Image (tagged)
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/mulkkam-prod:${{ steps.ver.outputs.version }}

  deploy:
    runs-on: [ self-hosted, linux, prod ]
    needs: build-and-push
    env:
      IMAGE_TAG: ${{ needs.build-and-push.outputs.version }}
    steps:
      - name: Stop and remove existing container
        run: |
          if [ "$(docker ps -a -q -f name=backend-app)" ]; then
            docker stop backend-app || true
            docker rm -f backend-app || true
          fi

      - name: Create .env file (inject IMAGE_TAG)
        run: |
          cat <<EOF > ~/mulkkam/.env
          IMAGE_TAG=${IMAGE_TAG}
          PROD_DATASOURCE_URL=${{ secrets.PROD_DATASOURCE_URL }}
          PROD_DATASOURCE_USERNAME=${{ secrets.PROD_DATASOURCE_USERNAME }}
          PROD_DATASOURCE_PASSWORD=${{ secrets.PROD_DATASOURCE_PASSWORD }}
          LOG_PATH=${{ secrets.LOG_PATH }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          ACCESS_TOKEN_EXPIRE=${{ secrets.ACCESS_TOKEN_EXPIRE }}
          REFRESH_TOKEN_EXPIRE=${{ secrets.REFRESH_TOKEN_EXPIRE }}
          FCM_BASE64_ENCODING_KEY=${{ secrets.FCM_BASE64_ENCODING_KEY }}
          FCM_PROJECT_ID=${{ secrets.FCM_PROJECT_ID }}
          OPEN_WEATHER_API_KEY=${{ secrets.OPEN_WEATHER_API_KEY }}
          SPRING_PROFILES_ACTIVE=prod
          EOF
          echo "Injected IMAGE_TAG=${IMAGE_TAG}"

      - name: Stop existing services
        working-directory: /home/ubuntu/mulkkam
        run: sudo docker compose stop backend-app

      - name: Start new services
        working-directory: /home/ubuntu/mulkkam
        run: sudo docker compose up -d backend-app
